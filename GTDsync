#!/bin/bash

# GTDsync: synchronize my personal GTD system.

# Handy little function I copied from Scriptmake
Die() { echo "${0##*/}: fatal: $1"; exit "$2"; } 

ERR_GENERIC=1

GTDfiles="${HOME}/bin/.GTDfiles"
[ -s "${GTDfiles}" ] || Die "First, create the file '${GTDfiles}'." "$ERR_GENERIC"
. ${GTDfiles}

DATETIMESTAMP=`date +"%Y-%m-%d %H:%M"`
AUCOMMIT_MSG="Autocommit from ${GTD_ID:?"Set the GTD_ID env. var., in file ${GTDfiles}, to an identifier for this machine"} at ${DATETIMESTAMP}"

# Synchronize the productivity system
echo "Checking productivity system:"
cd ${GTD_PROD:?"Need to set the \$GTD_PROD var in file ${GTDfiles}"}
git commit -a -m "${AUCOMMIT_MSG}" > /dev/null
git pull && git push
cd - > /dev/null
echo

# Synchronize notes
echo "Checking notes"
cd ${GTD_NOTES:?"Need to set the \$GTD_NOTES var in file ${GTDfiles}"}
git commit -a -m "${AUCOMMIT_MSG}" > /dev/null
git pull && git push
cd - > /dev/null
echo

# Synchronize binscripts
echo "Checking binscripts"
cd ${GTD_BIN:?"Need to set the \$GTD_BIN var in file ${GTDfiles}"}
git commit -a -m "${AUCOMMIT_MSG}" > /dev/null
git pull && git push
cd - > /dev/null
echo

# Synchronize dotfiles
echo "Checking dotfiles"
if [ "`ghar status dotfiles`" = 'dotfiles: dirty' ]
then
  cd "$GHAR_DIR/dotfiles"
  git commit -a -m "${AUCOMMIT_MSG}" > /dev/null
  git pull && git push
  cd - > /dev/null
  echo
fi
