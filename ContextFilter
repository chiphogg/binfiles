#!/usr/bin/perl

# Input: a number of context filters (i.e. @include, -@exclude) followed by
# lines of input.  If a line of input matches the filter, it is printed,
# otherwise it's just skipped.
$i = 0;
my @lines = ();
my @contexts_INC = ();
my @contexts_EXC = ();
while ($_ = shift @ARGV) {
	if (/^@(.*)$/) {
		push (@contexts_INC, $1);
	} elsif (/^-@(.*)$/) {
		push (@contexts_EXC, $1);
	} else {
		push (@lines, $_);
	}
}

while (<>) {
	push (@lines, $_);
}

foreach (@lines) {
	# If it matches any excluded contexts, skip it
	$excluded = 0;
	foreach $exc (@contexts_EXC) {
		$excluded++ and last if (/@\b$exc\b/);
	}
	next if ($excluded > 0);

	# If we are restricting ourselves to certain contexts (i.e. if contexts_INC
	# has at least one element), then we only print lines matching at least one
	# of those contexts.
	# (We make an exception for "context-free" lines, unless instructed to do
	# otherwise, since for the purposes I use this script these lines can often
	# be important.)
	if (/@[\w\d]/ && $#contexts_INC >= 0) {
		$included = 0;
		foreach $inc (@contexts_INC) {
			$included++ and last if (/@\b$inc\b/);
		}
		next unless ($included > 0);
	}

	#s/^\s+[-*#@]( [-*#@])?\s+(\S.*)$/\2/;
	print "$_";
}
